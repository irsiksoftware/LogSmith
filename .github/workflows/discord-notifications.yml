name: Discord Notifications

on:
  push:
  pull_request:
    types: [opened, closed]
  release:
    types: [published]

jobs:
  notify-commit:
    if: github.event_name == 'push'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for commit
        shell: powershell
        env:
          DISCORD_WEBHOOK: ${{ secrets.COMMIT_WEBHOOK }}
        run: |
          $commitMessage = ("${{ github.event.head_commit.message }}" -split "`n")[0]
          $commitUrl = "${{ github.event.head_commit.url }}"
          $author = "${{ github.event.head_commit.author.name }}"
          $repo = "${{ github.repository }}"
          $branch = "${{ github.ref_name }}"

          $payload = @{
            embeds = @(
              @{
                title = "New Commit to $repo"
                description = $commitMessage
                url = $commitUrl
                color = 5814783
                fields = @(
                  @{
                    name = "Author"
                    value = $author
                    inline = $true
                  }
                  @{
                    name = "Branch"
                    value = $branch
                    inline = $true
                  }
                )
                timestamp = "${{ github.event.head_commit.timestamp }}"
              }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $payload -ContentType "application/json"

  notify-pull-request:
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for opened PR
        if: github.event.action == 'opened'
        shell: powershell
        env:
          DISCORD_WEBHOOK: ${{ secrets.PULLREQUEST_WEBHOOK }}
        run: |
          $prTitle = "${{ github.event.pull_request.title }}"
          $prUrl = "${{ github.event.pull_request.html_url }}"
          $author = "${{ github.event.pull_request.user.login }}"
          $headBranch = "${{ github.event.pull_request.head.ref }}"
          $baseBranch = "${{ github.event.pull_request.base.ref }}"
          $prNumber = "${{ github.event.pull_request.number }}"

          $payload = @{
            embeds = @(
              @{
                title = "Pull Request Opened"
                description = $prTitle
                url = $prUrl
                color = 3447003
                fields = @(
                  @{
                    name = "Author"
                    value = $author
                    inline = $true
                  }
                  @{
                    name = "Branch"
                    value = "``$headBranch`` → ``$baseBranch``"
                    inline = $true
                  }
                  @{
                    name = "Status"
                    value = "Ready for Review"
                    inline = $true
                  }
                )
                timestamp = "${{ github.event.pull_request.created_at }}"
                footer = @{
                  text = "PR #$prNumber"
                }
              }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $payload -ContentType "application/json"

      - name: Send Discord notification for merged PR
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        shell: powershell
        env:
          DISCORD_WEBHOOK: ${{ secrets.PULLREQUEST_WEBHOOK }}
        run: |
          $prTitle = "${{ github.event.pull_request.title }}"
          $prUrl = "${{ github.event.pull_request.html_url }}"
          $author = "${{ github.event.pull_request.user.login }}"
          $mergedBy = "${{ github.event.pull_request.merged_by.login }}"
          $headBranch = "${{ github.event.pull_request.head.ref }}"
          $baseBranch = "${{ github.event.pull_request.base.ref }}"
          $prNumber = "${{ github.event.pull_request.number }}"
          $commits = "${{ github.event.pull_request.commits }}"
          $changedFiles = "${{ github.event.pull_request.changed_files }}"

          $payload = @{
            embeds = @(
              @{
                title = "Pull Request Merged"
                description = $prTitle
                url = $prUrl
                color = 5763719
                fields = @(
                  @{
                    name = "Author"
                    value = $author
                    inline = $true
                  }
                  @{
                    name = "Merged By"
                    value = $mergedBy
                    inline = $true
                  }
                  @{
                    name = "Branch"
                    value = "``$headBranch`` → ``$baseBranch``"
                    inline = $true
                  }
                  @{
                    name = "Commits"
                    value = $commits
                    inline = $true
                  }
                  @{
                    name = "Changed Files"
                    value = $changedFiles
                    inline = $true
                  }
                  @{
                    name = "Status"
                    value = "Successfully Merged"
                    inline = $true
                  }
                )
                timestamp = "${{ github.event.pull_request.merged_at }}"
                footer = @{
                  text = "PR #$prNumber"
                }
              }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $payload -ContentType "application/json"

  notify-release:
    if: github.event_name == 'release'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for release
        shell: powershell
        env:
          DISCORD_WEBHOOK: ${{ secrets.RELEASE_WEBHOOK }}
        run: |
          $releaseName = "${{ github.event.release.name }}"
          $releaseTag = "${{ github.event.release.tag_name }}"
          $releaseUrl = "${{ github.event.release.html_url }}"
          $releaseBodyFull = "${{ github.event.release.body }}"
          $releaseBody = if ($releaseBodyFull.Length -gt 500) { $releaseBodyFull.Substring(0, 500) } else { $releaseBodyFull }
          $author = "${{ github.event.release.author.login }}"
          $branch = "${{ github.event.release.target_commitish }}"

          $payload = @{
            embeds = @(
              @{
                title = "New Release: $releaseName"
                description = $releaseBody
                url = $releaseUrl
                color = 3066993
                fields = @(
                  @{
                    name = "Version"
                    value = $releaseTag
                    inline = $true
                  }
                  @{
                    name = "Released by"
                    value = $author
                    inline = $true
                  }
                  @{
                    name = "Branch"
                    value = $branch
                    inline = $true
                  }
                )
                timestamp = "${{ github.event.release.published_at }}"
              }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $payload -ContentType "application/json"
