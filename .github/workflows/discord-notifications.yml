name: Discord Notifications

on:
  push:
  pull_request:
    types: [opened, closed]
  release:
    types: [published]

jobs:
  notify-commit:
    if: github.event_name == 'push'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for commit
        env:
          DISCORD_WEBHOOK: ${{ secrets.COMMIT_WEBHOOK }}
        run: |
          COMMIT_MESSAGE=$(echo "${{ github.event.head_commit.message }}" | head -n 1)
          COMMIT_URL="${{ github.event.head_commit.url }}"
          AUTHOR="${{ github.event.head_commit.author.name }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"

          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "📝 New Commit to $REPO",
              "description": "$COMMIT_MESSAGE",
              "url": "$COMMIT_URL",
              "color": 5814783,
              "fields": [
                {
                  "name": "Author",
                  "value": "$AUTHOR",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "$BRANCH",
                  "inline": true
                }
              ],
              "timestamp": "${{ github.event.head_commit.timestamp }}"
            }]
          }
          EOF
          )

          curl -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK"

  notify-pull-request:
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for opened PR
        if: github.event.action == 'opened'
        env:
          DISCORD_WEBHOOK: ${{ secrets.PULLREQUEST_WEBHOOK }}
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          AUTHOR="${{ github.event.pull_request.user.login }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"

          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "🔔 Pull Request Opened",
              "description": "$PR_TITLE",
              "url": "$PR_URL",
              "color": 3447003,
              "fields": [
                {
                  "name": "Author",
                  "value": "$AUTHOR",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "\`$HEAD_BRANCH\` → \`$BASE_BRANCH\`",
                  "inline": true
                },
                {
                  "name": "Status",
                  "value": "📝 Ready for Review",
                  "inline": true
                }
              ],
              "timestamp": "${{ github.event.pull_request.created_at }}",
              "footer": {
                "text": "PR #$PR_NUMBER"
              }
            }]
          }
          EOF
          )

          curl -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK"

      - name: Send Discord notification for merged PR
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        env:
          DISCORD_WEBHOOK: ${{ secrets.PULLREQUEST_WEBHOOK }}
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          AUTHOR="${{ github.event.pull_request.user.login }}"
          MERGED_BY="${{ github.event.pull_request.merged_by.login }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          COMMITS="${{ github.event.pull_request.commits }}"
          CHANGED_FILES="${{ github.event.pull_request.changed_files }}"

          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "✅ Pull Request Merged",
              "description": "$PR_TITLE",
              "url": "$PR_URL",
              "color": 5763719,
              "fields": [
                {
                  "name": "Author",
                  "value": "$AUTHOR",
                  "inline": true
                },
                {
                  "name": "Merged By",
                  "value": "$MERGED_BY",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "\`$HEAD_BRANCH\` → \`$BASE_BRANCH\`",
                  "inline": true
                },
                {
                  "name": "Commits",
                  "value": "$COMMITS",
                  "inline": true
                },
                {
                  "name": "Changed Files",
                  "value": "$CHANGED_FILES",
                  "inline": true
                },
                {
                  "name": "Status",
                  "value": "🎉 Successfully Merged",
                  "inline": true
                }
              ],
              "timestamp": "${{ github.event.pull_request.merged_at }}",
              "footer": {
                "text": "PR #$PR_NUMBER"
              }
            }]
          }
          EOF
          )

          curl -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK"

  notify-release:
    if: github.event_name == 'release'
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Send Discord notification for release
        env:
          DISCORD_WEBHOOK: ${{ secrets.RELEASE_WEBHOOK }}
        run: |
          RELEASE_NAME="${{ github.event.release.name }}"
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          RELEASE_URL="${{ github.event.release.html_url }}"
          RELEASE_BODY=$(echo "${{ github.event.release.body }}" | head -c 500)
          AUTHOR="${{ github.event.release.author.login }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.event.release.target_commitish }}"

          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "🚀 New Release: $RELEASE_NAME",
              "description": "$RELEASE_BODY",
              "url": "$RELEASE_URL",
              "color": 3066993,
              "fields": [
                {
                  "name": "Version",
                  "value": "$RELEASE_TAG",
                  "inline": true
                },
                {
                  "name": "Released by",
                  "value": "$AUTHOR",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "$BRANCH",
                  "inline": true
                }
              ],
              "timestamp": "${{ github.event.release.published_at }}"
            }]
          }
          EOF
          )

          curl -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK"
